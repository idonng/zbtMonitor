package com.zbt.yqjk.controller;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.zbt.yqjk.common.LogTool;
import com.zbt.yqjk.pojo.Keyword;
import com.zbt.yqjk.pojo.ResultObject;
import com.zbt.yqjk.pojo.User;
import com.zbt.yqjk.service.IUserService;

@Controller
@RequestMapping("/page")
public class UserController {
	@Resource
	private IUserService userService;

	private static final Logger logger = Logger.getLogger(UserController.class);
	
	@RequestMapping("/showUser")
	public String toIndex(HttpServletRequest request, Model model) {
		Long userId = (long) Integer.parseInt(request.getParameter("id"));
		User user = this.userService.getUserById(userId);
		model.addAttribute("user", user);
		return "showUser";
	}

	@ResponseBody
	@RequestMapping("/updatepwd.do")
	public String updatepwd(@RequestParam("uid") String uid,
			@RequestParam("userpwd") String userpwd,
			@RequestParam("newpwd") String newpwd, HttpServletRequest request,
			HttpServletResponse response) {
		String oldpwd = userpwd;
		User olduser = new User();
		 Long userid=Long.parseLong (uid);
		olduser.setUserId(userid);
		String oldpwdsString = this.userService.selectByPrimaryKey(userid)
				.getUserPwd();
		if (oldpwd.equals(oldpwdsString)) {
			User user = new User();
			user.setUserId((long) 1);
			user.setUserPwd(newpwd);

			int i = this.userService.updateByPrimaryKeySelective(user);
			if (i == 1) {
				// System.out.println("更新成功！");
				new LogTool().insertLog(user.getUserId(), 3, "更新密码成功");
				return "1";
			} else {
				new LogTool().insertLog(user.getUserId(), 3, "更新密码失败");
				// System.out.println("更新失败！");
				return "2";
			}
		} else {
			// System.out.println("原始密码不正确！");
			return "0";
		}
	}
	
//	@ResponseBody
//	@RequestMapping("/showUserInfo.do")
//	public String showUserInfo(@RequestParam("uid") String uid,
//			HttpServletRequest request,HttpServletResponse response) {
//		 Long userid=Long.parseLong (uid);
//		User user=new User();
//		user.setUserId(userid);
//
//		int i=this.userService.updateByPrimaryKeySelective(user);
//		System.out.println(i);
//		if(i==1)
//		{
//			//System.out.println("提示更新成功！");
//			return "1";
//		}
//		else {
//			//System.out.println("提示更新失败！");
//			return "0";
//		}
//	}
//	
	
	@ResponseBody
	@RequestMapping("/updateUserInfo.do")
	public String updateUserInfo(@RequestParam("uid") String uid,
			@RequestParam("nameString") String nameString,
			@RequestParam("depString") String depString, 
			@RequestParam("emailString") String emailString, 
			@RequestParam("phoneString") String phoneString, 
			@RequestParam("telString") String telString, 
			HttpServletRequest request,HttpServletResponse response) {
		 Long userid=Long.parseLong (uid);
		User user=new User();
		user.setUserId(userid);
		user.setUserName(nameString);
		user.setUserDepa(depString);
		user.setUserEmail(emailString);
		user.setUserPhone(phoneString);
		user.setUserTel(telString);
		int i=this.userService.updateByPrimaryKeySelective(user);
		if(i==1)
		{
			HttpSession session = request.getSession();
			session.setAttribute("user", user);
			//System.out.println("提示更新成功！");
			new LogTool().insertLog(user.getUserId(), 3, "更新用户信息成功");
			return "1";
		}
		else {
			//System.out.println("提示更新失败！");
			new LogTool().insertLog(user.getUserId(), 3, "更新用户信息失败");
			return "0";
		}
	}

}
